// pellet 3D debug diagram

// coordinate system


translate([-128, -128, -128]) {
	// X = R
	rotate([0, 90, 0])
		arrow(1, 0, 0);
	
	// Y = G
	rotate([-90, 0, 0])
		arrow(0, 1, 0);
	
	// Z = B
		arrow(0, 0, 1);
	
	
	// cube lines 255x255x255
	// 3 vertiacal lines
	translate([255, 0, 0])
		line();
	translate([255, 255, 0])
		line();
	translate([0, 255, 0])
		line();
	
	// 2 bottom lines
	translate([0, 255, 0])
		rotate([0, 90, 0])
			line();
	translate([255, 0, 0])
		rotate([-90, 0, 0])
			line();
	
	// 4 top lines
	translate([0, 0, 255])
		rotate([0, 90, 0])
			line();
	translate([0, 255, 255])
		rotate([0, 90, 0])
			line();
	translate([0, 0, 255])
		rotate([-90, 0, 0])
			line();
	translate([255, 0, 255])
		rotate([-90, 0, 0])
			line();
}

// ====================================================
// sub-modules
// ====================================================

module arrow(R, G, B) {
	dim = .66;
	len = 280;
	head = 20;

	translate([0, 0, len / 2])
		color([R * dim, G * dim, B * dim])
			cylinder(r = 1, h = len, center=true);

	translate([0, 0, len + head / 2])
		color([R * dim, G * dim, B * dim])
			cylinder(r1 = 5, r2 = 0, h = head, center=true);
}


module line() {
	len = 255;

	translate([0, 0, len / 2])
		color([.5,, .5, .5])
			cylinder(r = .33, h = len, center=true);
}


// markers will be moved to -128...
module marker(x, y, z) {
	len = 32;

	translate([x - 128, y - 128, z - 128]) {
		color([0,0,0, .33]) {
			cylinder(r = .33, h = len, center=true);
			rotate([-90, 0, 0]) cylinder(r = .33, h = len, center=true);
			rotate([0, 90, 0])  cylinder(r = .33, h = len, center=true);
		}
		color([1, 1, 1, .2])
			sphere(r=30, center=true);
	}
}


// dots will be moved to -128...
module dot(x, y, z, c) {
	len = 3.33;

	translate([x - 128, y - 128, z - 128])
		color(c)
			sphere(r = len/2, $fn = 12, center=true);
}


// ====================================================
// automated content follows
// ====================================================

// # File: RGB_read_2014-04-07_20-13-15.csv
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 1 (Black)
dot(242.0, 226.0, 0.0, [0.7372549, 0.6862745, 0.0627451]); // 2 (Yellow)
dot(242.0, 242.0, 227.0, [0.9647059, 0.9647059, 0.8509804]); // 3 (White)
dot(54.0, 27.0, 9.0, [0.23921569, 0.14509805, 0.06666667]); // 4 (Grey)
dot(0.0, 7.0, 59.0, [0.0627451, 0.10980392, 0.29803923]); // 5 (Blue)
dot(240.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 6 (Red)
dot(240.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 7 (Red)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 8 (Black)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 9 (Black)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 10 (Black)
dot(66.0, 41.0, 19.0, [0.23921569, 0.14509805, 0.06666667]); // 11 (Grey)
dot(242.0, 237.0, 0.0, [0.7372549, 0.6862745, 0.0627451]); // 12 (Yellow)
dot(242.0, 242.0, 198.0, [0.9647059, 0.9647059, 0.8509804]); // 13 (White)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 14 (Black)
dot(243.0, 243.0, 242.0, [0.9647059, 0.9647059, 0.8509804]); // 15 (White)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 16 (Black)
dot(0.0, 102.0, 0.0, [0.019607844, 0.42745098, 0.011764706]); // 17 (Green)
dot(0.0, 119.0, 0.0, [0.019607844, 0.42745098, 0.011764706]); // 18 (Green)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 19 (Black)
dot(242.0, 239.0, 0.0, [0.7372549, 0.6862745, 0.0627451]); // 20 (Yellow)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 21 (Black)
dot(0.0, 11.0, 63.0, [0.0627451, 0.10980392, 0.29803923]); // 22 (Blue)
dot(0.0, 99.0, 0.0, [0.019607844, 0.42745098, 0.011764706]); // 23 (Green)
dot(0.0, 8.0, 57.0, [0.0627451, 0.10980392, 0.29803923]); // 24 (Blue)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 25 (Black)
dot(0.0, 116.0, 0.0, [0.019607844, 0.42745098, 0.011764706]); // 26 (Green)
dot(0.0, 11.0, 60.0, [0.0627451, 0.10980392, 0.29803923]); // 27 (Blue)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 28 (Black)
dot(37.0, 12.0, 3.0, [0.23921569, 0.14509805, 0.06666667]); // 29 (Grey)
dot(242.0, 239.0, 0.0, [0.7372549, 0.6862745, 0.0627451]); // 30 (Yellow)
dot(0.0, 106.0, 0.0, [0.019607844, 0.42745098, 0.011764706]); // 31 (Green)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 32 (Black)
dot(60.0, 31.0, 14.0, [0.23921569, 0.14509805, 0.06666667]); // 33 (Grey)
dot(0.0, 13.0, 66.0, [0.0627451, 0.10980392, 0.29803923]); // 34 (Blue)
dot(242.0, 242.0, 225.0, [0.9647059, 0.9647059, 0.8509804]); // 35 (White)
dot(49.0, 21.0, 7.0, [0.23921569, 0.14509805, 0.06666667]); // 36 (Grey)
dot(242.0, 242.0, 206.0, [0.9647059, 0.9647059, 0.8509804]); // 37 (White)
dot(148.0, 107.0, 73.0, [0.7372549, 0.6862745, 0.0627451]); // 38 (Yellow)
dot(240.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 39 (Red)
dot(41.0, 19.0, 5.0, [0.23921569, 0.14509805, 0.06666667]); // 40 (Grey)
dot(242.0, 242.0, 221.0, [0.9647059, 0.9647059, 0.8509804]); // 41 (White)
dot(242.0, 239.0, 0.0, [0.7372549, 0.6862745, 0.0627451]); // 42 (Yellow)
dot(242.0, 242.0, 222.0, [0.9647059, 0.9647059, 0.8509804]); // 43 (White)
dot(240.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 44 (Red)
dot(242.0, 242.0, 202.0, [0.9647059, 0.9647059, 0.8509804]); // 45 (White)
dot(63.0, 34.0, 17.0, [0.23921569, 0.14509805, 0.06666667]); // 46 (Grey)
dot(53.0, 25.0, 11.0, [0.23921569, 0.14509805, 0.06666667]); // 47 (Grey)
dot(92.0, 80.0, 41.0, [0.23921569, 0.14509805, 0.06666667]); // 48 (Grey)
dot(54.0, 32.0, 11.0, [0.23921569, 0.14509805, 0.06666667]); // 49 (Grey)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 50 (Black)
dot(242.0, 242.0, 218.0, [0.9647059, 0.9647059, 0.8509804]); // 51 (White)
dot(240.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 52 (Red)
dot(242.0, 242.0, 208.0, [0.9647059, 0.9647059, 0.8509804]); // 53 (White)
dot(241.0, 242.0, 195.0, [0.9647059, 0.9647059, 0.8509804]); // 54 (White)
dot(242.0, 242.0, 225.0, [0.9647059, 0.9647059, 0.8509804]); // 55 (White)
dot(1.0, 10.0, 60.0, [0.0627451, 0.10980392, 0.29803923]); // 56 (Blue)
dot(240.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 57 (Red)
dot(242.0, 242.0, 228.0, [0.9647059, 0.9647059, 0.8509804]); // 58 (White)
dot(64.0, 42.0, 19.0, [0.23921569, 0.14509805, 0.06666667]); // 59 (Grey)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 60 (Black)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 61 (Black)
dot(242.0, 242.0, 212.0, [0.9647059, 0.9647059, 0.8509804]); // 62 (White)
dot(242.0, 242.0, 212.0, [0.9647059, 0.9647059, 0.8509804]); // 63 (White)
dot(0.0, 10.0, 61.0, [0.0627451, 0.10980392, 0.29803923]); // 64 (Blue)
dot(240.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 65 (Red)
dot(0.0, 9.0, 59.0, [0.0627451, 0.10980392, 0.29803923]); // 66 (Blue)
dot(241.0, 242.0, 199.0, [0.9647059, 0.9647059, 0.8509804]); // 67 (White)
dot(242.0, 240.0, 0.0, [0.7372549, 0.6862745, 0.0627451]); // 68 (Yellow)
dot(80.0, 48.0, 28.0, [0.23921569, 0.14509805, 0.06666667]); // 69 (Grey)
dot(54.0, 21.0, 10.0, [0.23921569, 0.14509805, 0.06666667]); // 70 (Grey)
dot(0.0, 8.0, 56.0, [0.0627451, 0.10980392, 0.29803923]); // 71 (Blue)
dot(104.0, 63.0, 44.0, [0.23921569, 0.14509805, 0.06666667]); // 72 (Grey)
dot(0.0, 104.0, 0.0, [0.019607844, 0.42745098, 0.011764706]); // 73 (Green)
dot(68.0, 53.0, 24.0, [0.23921569, 0.14509805, 0.06666667]); // 74 (Grey)
dot(81.0, 47.0, 29.0, [0.23921569, 0.14509805, 0.06666667]); // 75 (Grey)
dot(242.0, 239.0, 0.0, [0.7372549, 0.6862745, 0.0627451]); // 76 (Yellow)
dot(242.0, 238.0, 0.0, [0.7372549, 0.6862745, 0.0627451]); // 77 (Yellow)
dot(240.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 78 (Red)
dot(0.0, 103.0, 0.0, [0.019607844, 0.42745098, 0.011764706]); // 79 (Green)
dot(242.0, 239.0, 0.0, [0.7372549, 0.6862745, 0.0627451]); // 80 (Yellow)
dot(0.0, 10.0, 56.0, [0.0627451, 0.10980392, 0.29803923]); // 81 (Blue)
// # File: RGB_read_2014-04-07_20-19-24.csv
dot(242.0, 239.0, 0.0, [0.7372549, 0.6862745, 0.0627451]); // 83 (Yellow)
dot(63.0, 41.0, 17.0, [0.23921569, 0.14509805, 0.06666667]); // 84 (Grey)
dot(44.0, 17.0, 5.0, [0.23921569, 0.14509805, 0.06666667]); // 85 (Grey)
dot(40.0, 18.0, 5.0, [0.23921569, 0.14509805, 0.06666667]); // 86 (Grey)
dot(58.0, 32.0, 14.0, [0.23921569, 0.14509805, 0.06666667]); // 87 (Grey)
dot(55.0, 29.0, 11.0, [0.23921569, 0.14509805, 0.06666667]); // 88 (Grey)
dot(66.0, 51.0, 22.0, [0.23921569, 0.14509805, 0.06666667]); // 89 (Grey)
dot(68.0, 45.0, 22.0, [0.23921569, 0.14509805, 0.06666667]); // 90 (Grey)
dot(80.0, 47.0, 26.0, [0.23921569, 0.14509805, 0.06666667]); // 91 (Grey)
dot(76.0, 67.0, 31.0, [0.23921569, 0.14509805, 0.06666667]); // 92 (Grey)
dot(64.0, 39.0, 17.0, [0.23921569, 0.14509805, 0.06666667]); // 93 (Grey)
dot(64.0, 37.0, 18.0, [0.23921569, 0.14509805, 0.06666667]); // 94 (Grey)
dot(51.0, 25.0, 8.0, [0.23921569, 0.14509805, 0.06666667]); // 95 (Grey)
dot(43.0, 27.0, 7.0, [0.23921569, 0.14509805, 0.06666667]); // 96 (Grey)
dot(48.0, 24.0, 9.0, [0.23921569, 0.14509805, 0.06666667]); // 97 (Grey)
dot(87.0, 54.0, 32.0, [0.23921569, 0.14509805, 0.06666667]); // 98 (Grey)
dot(84.0, 52.0, 30.0, [0.23921569, 0.14509805, 0.06666667]); // 99 (Grey)
dot(38.0, 15.0, 3.0, [0.23921569, 0.14509805, 0.06666667]); // 100 (Grey)
// # File: RGB_read_2014-04-07_20-28-58.csv
dot(48.0, 23.0, 8.0, [0.23921569, 0.14509805, 0.06666667]); // 102 (Grey)
dot(240.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 103 (Red)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 104 (Black)
dot(242.0, 242.0, 217.0, [0.9647059, 0.9647059, 0.8509804]); // 105 (White)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 106 (Black)
dot(53.0, 33.0, 13.0, [0.23921569, 0.14509805, 0.06666667]); // 107 (Grey)
dot(68.0, 44.0, 21.0, [0.23921569, 0.14509805, 0.06666667]); // 108 (Grey)
dot(1.0, 17.0, 72.0, [0.0627451, 0.10980392, 0.29803923]); // 109 (Blue)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 110 (Black)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 111 (Black)
dot(242.0, 242.0, 227.0, [0.9647059, 0.9647059, 0.8509804]); // 112 (White)
dot(35.0, 13.0, 2.0, [0.0, 0.0, 0.0]); // 113 (Black)
dot(0.0, 104.0, 0.0, [0.019607844, 0.42745098, 0.011764706]); // 114 (Green)
dot(242.0, 240.0, 0.0, [0.7372549, 0.6862745, 0.0627451]); // 115 (Yellow)
dot(0.0, 16.0, 69.0, [0.0627451, 0.10980392, 0.29803923]); // 116 (Blue)
dot(242.0, 239.0, 0.0, [0.7372549, 0.6862745, 0.0627451]); // 117 (Yellow)
dot(98.0, 82.0, 42.0, [0.23921569, 0.14509805, 0.06666667]); // 118 (Grey)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 119 (Black)
dot(0.0, 11.0, 64.0, [0.0627451, 0.10980392, 0.29803923]); // 120 (Blue)
dot(240.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 121 (Red)
dot(242.0, 240.0, 1.0, [0.7372549, 0.6862745, 0.0627451]); // 122 (Yellow)
dot(242.0, 242.0, 213.0, [0.9647059, 0.9647059, 0.8509804]); // 123 (White)
dot(242.0, 242.0, 223.0, [0.9647059, 0.9647059, 0.8509804]); // 124 (White)
dot(64.0, 32.0, 16.0, [0.23921569, 0.14509805, 0.06666667]); // 125 (Grey)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 126 (Black)
dot(0.0, 114.0, 0.0, [0.019607844, 0.42745098, 0.011764706]); // 127 (Green)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 128 (Black)
dot(73.0, 43.0, 22.0, [0.23921569, 0.14509805, 0.06666667]); // 129 (Grey)
dot(242.0, 242.0, 207.0, [0.9647059, 0.9647059, 0.8509804]); // 130 (White)
dot(49.0, 17.0, 7.0, [0.23921569, 0.14509805, 0.06666667]); // 131 (Grey)
dot(125.0, 76.0, 51.0, [0.23921569, 0.14509805, 0.06666667]); // 132 (Grey)
dot(61.0, 35.0, 17.0, [0.23921569, 0.14509805, 0.06666667]); // 133 (Grey)
dot(0.0, 10.0, 62.0, [0.0627451, 0.10980392, 0.29803923]); // 134 (Blue)
dot(242.0, 236.0, 0.0, [0.7372549, 0.6862745, 0.0627451]); // 135 (Yellow)
dot(242.0, 242.0, 200.0, [0.9647059, 0.9647059, 0.8509804]); // 136 (White)
dot(242.0, 238.0, 0.0, [0.7372549, 0.6862745, 0.0627451]); // 137 (Yellow)
// # File: RGB_read_2014-04-12_15-06-21.csv
dot(245.0, 10.0, 3.0, [0.8862745, 0.023529412, 0.007843138]); // 139 (Red)
dot(246.0, 246.0, 215.0, [0.9647059, 0.9647059, 0.8509804]); // 140 (White)
dot(30.0, 42.0, 95.0, [0.0627451, 0.10980392, 0.29803923]); // 141 (Blue)
dot(1.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 142 (Black)
dot(245.0, 19.0, 11.0, [0.8862745, 0.023529412, 0.007843138]); // 143 (Red)
dot(1.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 144 (Black)
dot(245.0, 16.0, 8.0, [0.8862745, 0.023529412, 0.007843138]); // 145 (Red)
dot(33.0, 46.0, 93.0, [0.0627451, 0.10980392, 0.29803923]); // 146 (Blue)
dot(2.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 147 (Black)
dot(245.0, 20.0, 11.0, [0.8862745, 0.023529412, 0.007843138]); // 148 (Red)
dot(245.0, 18.0, 11.0, [0.8862745, 0.023529412, 0.007843138]); // 149 (Red)
dot(246.0, 246.0, 243.0, [0.9647059, 0.9647059, 0.8509804]); // 150 (White)
dot(246.0, 244.0, 34.0, [0.7372549, 0.6862745, 0.0627451]); // 151 (Yellow)
dot(34.0, 48.0, 93.0, [0.0627451, 0.10980392, 0.29803923]); // 152 (Blue)
dot(246.0, 246.0, 235.0, [0.9647059, 0.9647059, 0.8509804]); // 153 (White)
dot(246.0, 244.0, 38.0, [0.7372549, 0.6862745, 0.0627451]); // 154 (Yellow)
dot(246.0, 243.0, 34.0, [0.7372549, 0.6862745, 0.0627451]); // 155 (Yellow)
dot(34.0, 42.0, 90.0, [0.0627451, 0.10980392, 0.29803923]); // 156 (Blue)
// # File: RGB_read_2014-04-12_15-08-45.csv
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 158 (Black)
dot(245.0, 12.0, 5.0, [0.8862745, 0.023529412, 0.007843138]); // 159 (Red)
dot(11.0, 115.0, 8.0, [0.019607844, 0.42745098, 0.011764706]); // 160 (Green)
dot(246.0, 245.0, 32.0, [0.7372549, 0.6862745, 0.0627451]); // 161 (Yellow)
dot(11.0, 105.0, 6.0, [0.019607844, 0.42745098, 0.011764706]); // 162 (Green)
dot(13.0, 129.0, 11.0, [0.019607844, 0.42745098, 0.011764706]); // 163 (Green)
dot(246.0, 246.0, 231.0, [0.9647059, 0.9647059, 0.8509804]); // 164 (White)
dot(24.0, 34.0, 84.0, [0.0627451, 0.10980392, 0.29803923]); // 165 (Blue)
dot(11.0, 116.0, 7.0, [0.019607844, 0.42745098, 0.011764706]); // 166 (Green)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 167 (Black)
dot(246.0, 246.0, 222.0, [0.9647059, 0.9647059, 0.8509804]); // 168 (White)
dot(7.0, 107.0, 4.0, [0.019607844, 0.42745098, 0.011764706]); // 169 (Green)
dot(246.0, 246.0, 213.0, [0.9647059, 0.9647059, 0.8509804]); // 170 (White)
dot(246.0, 246.0, 217.0, [0.9647059, 0.9647059, 0.8509804]); // 171 (White)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 172 (Black)
dot(245.0, 1.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 173 (Red)
dot(246.0, 236.0, 12.0, [0.7372549, 0.6862745, 0.0627451]); // 174 (Yellow)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 175 (Black)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 176 (Black)
dot(245.0, 238.0, 9.0, [0.7372549, 0.6862745, 0.0627451]); // 177 (Yellow)
dot(246.0, 236.0, 11.0, [0.7372549, 0.6862745, 0.0627451]); // 178 (Yellow)
dot(245.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 179 (Red)
dot(246.0, 246.0, 207.0, [0.9647059, 0.9647059, 0.8509804]); // 180 (White)
dot(245.0, 1.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 181 (Red)
dot(4.0, 112.0, 2.0, [0.019607844, 0.42745098, 0.011764706]); // 182 (Green)
dot(16.0, 28.0, 78.0, [0.0627451, 0.10980392, 0.29803923]); // 183 (Blue)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 184 (Black)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 185 (Black)
dot(246.0, 239.0, 12.0, [0.7372549, 0.6862745, 0.0627451]); // 186 (Yellow)
dot(246.0, 246.0, 215.0, [0.9647059, 0.9647059, 0.8509804]); // 187 (White)
dot(6.0, 114.0, 3.0, [0.019607844, 0.42745098, 0.011764706]); // 188 (Green)
dot(15.0, 23.0, 68.0, [0.0627451, 0.10980392, 0.29803923]); // 189 (Blue)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 190 (Black)
dot(3.0, 101.0, 1.0, [0.019607844, 0.42745098, 0.011764706]); // 191 (Green)
dot(14.0, 23.0, 73.0, [0.0627451, 0.10980392, 0.29803923]); // 192 (Blue)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 193 (Black)
dot(4.0, 104.0, 1.0, [0.019607844, 0.42745098, 0.011764706]); // 194 (Green)
dot(246.0, 246.0, 212.0, [0.9647059, 0.9647059, 0.8509804]); // 195 (White)
dot(245.0, 1.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 196 (Red)
dot(246.0, 246.0, 216.0, [0.9647059, 0.9647059, 0.8509804]); // 197 (White)
dot(246.0, 231.0, 8.0, [0.7372549, 0.6862745, 0.0627451]); // 198 (Yellow)
dot(4.0, 111.0, 1.0, [0.019607844, 0.42745098, 0.011764706]); // 199 (Green)
dot(246.0, 246.0, 221.0, [0.9647059, 0.9647059, 0.8509804]); // 200 (White)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 201 (Black)
dot(246.0, 245.0, 185.0, [0.9647059, 0.9647059, 0.8509804]); // 202 (White)
dot(246.0, 246.0, 221.0, [0.9647059, 0.9647059, 0.8509804]); // 203 (White)
dot(245.0, 1.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 204 (Red)
dot(246.0, 246.0, 211.0, [0.9647059, 0.9647059, 0.8509804]); // 205 (White)
dot(13.0, 25.0, 74.0, [0.0627451, 0.10980392, 0.29803923]); // 206 (Blue)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 207 (Black)
// # File: RGB_read_2014-04-12_15-14-34.csv
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 209 (Black)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 210 (Black)
dot(1.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 211 (Black)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 212 (Black)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 213 (Black)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 214 (Black)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 215 (Black)
dot(246.0, 246.0, 222.0, [0.9647059, 0.9647059, 0.8509804]); // 216 (White)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 217 (Black)
dot(246.0, 246.0, 203.0, [0.9647059, 0.9647059, 0.8509804]); // 218 (White)
dot(24.0, 37.0, 86.0, [0.0627451, 0.10980392, 0.29803923]); // 219 (Blue)
dot(246.0, 246.0, 220.0, [0.9647059, 0.9647059, 0.8509804]); // 220 (White)
dot(9.0, 114.0, 5.0, [0.019607844, 0.42745098, 0.011764706]); // 221 (Green)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 222 (Black)
dot(246.0, 242.0, 23.0, [0.7372549, 0.6862745, 0.0627451]); // 223 (Yellow)
dot(245.0, 8.0, 1.0, [0.8862745, 0.023529412, 0.007843138]); // 224 (Red)
dot(26.0, 34.0, 77.0, [0.0627451, 0.10980392, 0.29803923]); // 225 (Blue)
dot(27.0, 39.0, 87.0, [0.0627451, 0.10980392, 0.29803923]); // 226 (Blue)
dot(246.0, 246.0, 221.0, [0.9647059, 0.9647059, 0.8509804]); // 227 (White)
dot(245.0, 8.0, 3.0, [0.8862745, 0.023529412, 0.007843138]); // 228 (Red)
dot(246.0, 243.0, 23.0, [0.7372549, 0.6862745, 0.0627451]); // 229 (Yellow)
dot(245.0, 14.0, 6.0, [0.8862745, 0.023529412, 0.007843138]); // 230 (Red)
dot(17.0, 116.0, 13.0, [0.019607844, 0.42745098, 0.011764706]); // 231 (Green)
dot(246.0, 244.0, 33.0, [0.7372549, 0.6862745, 0.0627451]); // 232 (Yellow)
dot(247.0, 247.0, 243.0, [0.9647059, 0.9647059, 0.8509804]); // 233 (White)
dot(246.0, 243.0, 30.0, [0.7372549, 0.6862745, 0.0627451]); // 234 (Yellow)
dot(246.0, 246.0, 227.0, [0.9647059, 0.9647059, 0.8509804]); // 235 (White)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 236 (Black)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 237 (Black)
dot(11.0, 111.0, 7.0, [0.019607844, 0.42745098, 0.011764706]); // 238 (Green)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 239 (Black)
dot(246.0, 246.0, 233.0, [0.9647059, 0.9647059, 0.8509804]); // 240 (White)
dot(246.0, 246.0, 237.0, [0.9647059, 0.9647059, 0.8509804]); // 241 (White)
dot(246.0, 246.0, 222.0, [0.9647059, 0.9647059, 0.8509804]); // 242 (White)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 243 (Black)
dot(25.0, 38.0, 87.0, [0.0627451, 0.10980392, 0.29803923]); // 244 (Blue)
dot(246.0, 246.0, 228.0, [0.9647059, 0.9647059, 0.8509804]); // 245 (White)
dot(246.0, 246.0, 230.0, [0.9647059, 0.9647059, 0.8509804]); // 246 (White)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 247 (Black)
dot(245.0, 13.0, 5.0, [0.8862745, 0.023529412, 0.007843138]); // 248 (Red)
dot(28.0, 40.0, 87.0, [0.0627451, 0.10980392, 0.29803923]); // 249 (Blue)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 250 (Black)
dot(15.0, 107.0, 8.0, [0.019607844, 0.42745098, 0.011764706]); // 251 (Green)
dot(246.0, 246.0, 227.0, [0.9647059, 0.9647059, 0.8509804]); // 252 (White)
dot(246.0, 243.0, 21.0, [0.7372549, 0.6862745, 0.0627451]); // 253 (Yellow)
dot(18.0, 26.0, 75.0, [0.0627451, 0.10980392, 0.29803923]); // 254 (Blue)
dot(246.0, 246.0, 220.0, [0.9647059, 0.9647059, 0.8509804]); // 255 (White)
dot(246.0, 246.0, 206.0, [0.9647059, 0.9647059, 0.8509804]); // 256 (White)
dot(246.0, 246.0, 224.0, [0.9647059, 0.9647059, 0.8509804]); // 257 (White)
dot(2.0, 100.0, 0.0, [0.019607844, 0.42745098, 0.011764706]); // 258 (Green)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 259 (Black)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 260 (Black)
dot(10.0, 22.0, 71.0, [0.0627451, 0.10980392, 0.29803923]); // 261 (Blue)
dot(2.0, 102.0, 1.0, [0.019607844, 0.42745098, 0.011764706]); // 262 (Green)
dot(11.0, 19.0, 65.0, [0.0627451, 0.10980392, 0.29803923]); // 263 (Blue)
dot(246.0, 241.0, 8.0, [0.7372549, 0.6862745, 0.0627451]); // 264 (Yellow)
dot(9.0, 16.0, 61.0, [0.0627451, 0.10980392, 0.29803923]); // 265 (Blue)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 266 (Black)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 267 (Black)
dot(246.0, 246.0, 202.0, [0.9647059, 0.9647059, 0.8509804]); // 268 (White)
dot(2.0, 107.0, 1.0, [0.019607844, 0.42745098, 0.011764706]); // 269 (Green)
dot(246.0, 246.0, 213.0, [0.9647059, 0.9647059, 0.8509804]); // 270 (White)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 271 (Black)
dot(246.0, 246.0, 203.0, [0.9647059, 0.9647059, 0.8509804]); // 272 (White)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 273 (Black)
dot(245.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 274 (Red)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 275 (Black)
dot(246.0, 246.0, 212.0, [0.9647059, 0.9647059, 0.8509804]); // 276 (White)
dot(246.0, 246.0, 209.0, [0.9647059, 0.9647059, 0.8509804]); // 277 (White)
dot(2.0, 104.0, 0.0, [0.019607844, 0.42745098, 0.011764706]); // 278 (Green)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 279 (Black)
dot(245.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 280 (Red)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 281 (Black)
dot(245.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 282 (Red)
dot(244.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 283 (Red)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 284 (Black)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 285 (Black)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 286 (Black)
dot(246.0, 246.0, 187.0, [0.9647059, 0.9647059, 0.8509804]); // 287 (White)
dot(2.0, 101.0, 0.0, [0.019607844, 0.42745098, 0.011764706]); // 288 (Green)
dot(246.0, 246.0, 216.0, [0.9647059, 0.9647059, 0.8509804]); // 289 (White)
dot(245.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 290 (Red)
dot(246.0, 246.0, 196.0, [0.9647059, 0.9647059, 0.8509804]); // 291 (White)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 292 (Black)
dot(246.0, 231.0, 3.0, [0.7372549, 0.6862745, 0.0627451]); // 293 (Yellow)
dot(8.0, 18.0, 65.0, [0.0627451, 0.10980392, 0.29803923]); // 294 (Blue)
dot(3.0, 120.0, 2.0, [0.019607844, 0.42745098, 0.011764706]); // 295 (Green)
dot(247.0, 244.0, 9.0, [0.7372549, 0.6862745, 0.0627451]); // 296 (Yellow)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 297 (Black)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 298 (Black)
dot(246.0, 247.0, 230.0, [0.9647059, 0.9647059, 0.8509804]); // 299 (White)
dot(245.0, 5.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 300 (Red)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 301 (Black)
dot(8.0, 24.0, 75.0, [0.0627451, 0.10980392, 0.29803923]); // 302 (Blue)
dot(246.0, 247.0, 227.0, [0.9647059, 0.9647059, 0.8509804]); // 303 (White)
dot(246.0, 246.0, 210.0, [0.9647059, 0.9647059, 0.8509804]); // 304 (White)
dot(246.0, 246.0, 211.0, [0.9647059, 0.9647059, 0.8509804]); // 305 (White)
dot(246.0, 246.0, 205.0, [0.9647059, 0.9647059, 0.8509804]); // 306 (White)
dot(246.0, 246.0, 202.0, [0.9647059, 0.9647059, 0.8509804]); // 307 (White)
dot(246.0, 233.0, 5.0, [0.7372549, 0.6862745, 0.0627451]); // 308 (Yellow)
dot(246.0, 246.0, 211.0, [0.9647059, 0.9647059, 0.8509804]); // 309 (White)
dot(245.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 310 (Red)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 311 (Black)
dot(7.0, 18.0, 67.0, [0.0627451, 0.10980392, 0.29803923]); // 312 (Blue)
dot(7.0, 19.0, 66.0, [0.0627451, 0.10980392, 0.29803923]); // 313 (Blue)
dot(2.0, 105.0, 0.0, [0.019607844, 0.42745098, 0.011764706]); // 314 (Green)
dot(246.0, 229.0, 3.0, [0.7372549, 0.6862745, 0.0627451]); // 315 (Yellow)
dot(247.0, 246.0, 229.0, [0.9647059, 0.9647059, 0.8509804]); // 316 (White)
dot(1.0, 96.0, 0.0, [0.019607844, 0.42745098, 0.011764706]); // 317 (Green)
dot(245.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 318 (Red)
dot(246.0, 241.0, 5.0, [0.7372549, 0.6862745, 0.0627451]); // 319 (Yellow)
dot(2.0, 107.0, 0.0, [0.019607844, 0.42745098, 0.011764706]); // 320 (Green)
dot(7.0, 21.0, 72.0, [0.0627451, 0.10980392, 0.29803923]); // 321 (Blue)
dot(246.0, 246.0, 212.0, [0.9647059, 0.9647059, 0.8509804]); // 322 (White)
dot(245.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 323 (Red)
dot(245.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 324 (Red)
dot(246.0, 241.0, 5.0, [0.7372549, 0.6862745, 0.0627451]); // 325 (Yellow)
dot(246.0, 242.0, 6.0, [0.7372549, 0.6862745, 0.0627451]); // 326 (Yellow)
dot(246.0, 246.0, 203.0, [0.9647059, 0.9647059, 0.8509804]); // 327 (White)
dot(246.0, 246.0, 210.0, [0.9647059, 0.9647059, 0.8509804]); // 328 (White)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 329 (Black)
dot(246.0, 246.0, 216.0, [0.9647059, 0.9647059, 0.8509804]); // 330 (White)
dot(246.0, 246.0, 210.0, [0.9647059, 0.9647059, 0.8509804]); // 331 (White)
dot(2.0, 107.0, 0.0, [0.019607844, 0.42745098, 0.011764706]); // 332 (Green)
dot(7.0, 19.0, 70.0, [0.0627451, 0.10980392, 0.29803923]); // 333 (Blue)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 334 (Black)
dot(2.0, 105.0, 0.0, [0.019607844, 0.42745098, 0.011764706]); // 335 (Green)
dot(1.0, 110.0, 0.0, [0.019607844, 0.42745098, 0.011764706]); // 336 (Green)
dot(246.0, 225.0, 4.0, [0.7372549, 0.6862745, 0.0627451]); // 337 (Yellow)
dot(6.0, 17.0, 66.0, [0.0627451, 0.10980392, 0.29803923]); // 338 (Blue)
dot(246.0, 246.0, 217.0, [0.9647059, 0.9647059, 0.8509804]); // 339 (White)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 340 (Black)
dot(247.0, 247.0, 230.0, [0.9647059, 0.9647059, 0.8509804]); // 341 (White)
dot(246.0, 246.0, 222.0, [0.9647059, 0.9647059, 0.8509804]); // 342 (White)
dot(11.0, 23.0, 70.0, [0.0627451, 0.10980392, 0.29803923]); // 343 (Blue)
dot(10.0, 22.0, 73.0, [0.0627451, 0.10980392, 0.29803923]); // 344 (Blue)
dot(246.0, 246.0, 207.0, [0.9647059, 0.9647059, 0.8509804]); // 345 (White)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 346 (Black)
dot(245.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 347 (Red)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 348 (Black)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 349 (Black)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 350 (Black)
dot(8.0, 20.0, 68.0, [0.0627451, 0.10980392, 0.29803923]); // 351 (Blue)
dot(246.0, 241.0, 6.0, [0.7372549, 0.6862745, 0.0627451]); // 352 (Yellow)
dot(245.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 353 (Red)
dot(246.0, 246.0, 216.0, [0.9647059, 0.9647059, 0.8509804]); // 354 (White)
dot(245.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 355 (Red)
dot(246.0, 246.0, 220.0, [0.9647059, 0.9647059, 0.8509804]); // 356 (White)
dot(248.0, 248.0, 246.0, [0.9647059, 0.9647059, 0.8509804]); // 357 (White)
dot(246.0, 243.0, 12.0, [0.7372549, 0.6862745, 0.0627451]); // 358 (Yellow)
dot(15.0, 30.0, 83.0, [0.0627451, 0.10980392, 0.29803923]); // 359 (Blue)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 360 (Black)
dot(246.0, 241.0, 14.0, [0.7372549, 0.6862745, 0.0627451]); // 361 (Yellow)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 362 (Black)
dot(20.0, 33.0, 87.0, [0.0627451, 0.10980392, 0.29803923]); // 363 (Blue)
dot(245.0, 1.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 364 (Red)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 365 (Black)
dot(7.0, 122.0, 5.0, [0.019607844, 0.42745098, 0.011764706]); // 366 (Green)
dot(247.0, 244.0, 20.0, [0.7372549, 0.6862745, 0.0627451]); // 367 (Yellow)
dot(246.0, 237.0, 17.0, [0.7372549, 0.6862745, 0.0627451]); // 368 (Yellow)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 369 (Black)
dot(246.0, 246.0, 216.0, [0.9647059, 0.9647059, 0.8509804]); // 370 (White)
dot(246.0, 246.0, 212.0, [0.9647059, 0.9647059, 0.8509804]); // 371 (White)
dot(4.0, 109.0, 2.0, [0.019607844, 0.42745098, 0.011764706]); // 372 (Green)
dot(246.0, 221.0, 8.0, [0.7372549, 0.6862745, 0.0627451]); // 373 (Yellow)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 374 (Black)
dot(2.0, 113.0, 1.0, [0.019607844, 0.42745098, 0.011764706]); // 375 (Green)
dot(245.0, 0.0, 0.0, [0.8862745, 0.023529412, 0.007843138]); // 376 (Red)
// # File: RGB_read_2014-04-12_16-28-43.csv
dot(246.0, 246.0, 209.0, [0.9647059, 0.9647059, 0.8509804]); // 378 (White)
dot(52.0, 23.0, 14.0, [0.23921569, 0.14509805, 0.06666667]); // 379 (Grey)
dot(67.0, 36.0, 24.0, [0.23921569, 0.14509805, 0.06666667]); // 380 (Grey)
dot(69.0, 35.0, 24.0, [0.23921569, 0.14509805, 0.06666667]); // 381 (Grey)
dot(96.0, 65.0, 42.0, [0.23921569, 0.14509805, 0.06666667]); // 382 (Grey)
dot(71.0, 35.0, 25.0, [0.23921569, 0.14509805, 0.06666667]); // 383 (Grey)
dot(65.0, 29.0, 21.0, [0.23921569, 0.14509805, 0.06666667]); // 384 (Grey)
dot(62.0, 34.0, 20.0, [0.23921569, 0.14509805, 0.06666667]); // 385 (Grey)
dot(93.0, 57.0, 40.0, [0.23921569, 0.14509805, 0.06666667]); // 386 (Grey)
dot(72.0, 40.0, 28.0, [0.23921569, 0.14509805, 0.06666667]); // 387 (Grey)
dot(78.0, 38.0, 29.0, [0.23921569, 0.14509805, 0.06666667]); // 388 (Grey)
dot(74.0, 34.0, 23.0, [0.23921569, 0.14509805, 0.06666667]); // 389 (Grey)
dot(81.0, 43.0, 28.0, [0.23921569, 0.14509805, 0.06666667]); // 390 (Grey)
dot(100.0, 71.0, 46.0, [0.23921569, 0.14509805, 0.06666667]); // 391 (Grey)
dot(78.0, 40.0, 29.0, [0.23921569, 0.14509805, 0.06666667]); // 392 (Grey)
dot(52.0, 23.0, 13.0, [0.23921569, 0.14509805, 0.06666667]); // 393 (Grey)
dot(91.0, 87.0, 47.0, [0.23921569, 0.14509805, 0.06666667]); // 394 (Grey)
dot(60.0, 25.0, 15.0, [0.23921569, 0.14509805, 0.06666667]); // 395 (Grey)
dot(68.0, 37.0, 23.0, [0.23921569, 0.14509805, 0.06666667]); // 396 (Grey)
dot(65.0, 33.0, 23.0, [0.23921569, 0.14509805, 0.06666667]); // 397 (Grey)
dot(81.0, 52.0, 33.0, [0.23921569, 0.14509805, 0.06666667]); // 398 (Grey)
dot(71.0, 36.0, 25.0, [0.23921569, 0.14509805, 0.06666667]); // 399 (Grey)
dot(77.0, 37.0, 29.0, [0.23921569, 0.14509805, 0.06666667]); // 400 (Grey)
dot(76.0, 37.0, 26.0, [0.23921569, 0.14509805, 0.06666667]); // 401 (Grey)
dot(89.0, 52.0, 34.0, [0.23921569, 0.14509805, 0.06666667]); // 402 (Grey)
dot(60.0, 29.0, 19.0, [0.23921569, 0.14509805, 0.06666667]); // 403 (Grey)
dot(84.0, 53.0, 36.0, [0.23921569, 0.14509805, 0.06666667]); // 404 (Grey)
dot(83.0, 46.0, 31.0, [0.23921569, 0.14509805, 0.06666667]); // 405 (Grey)
dot(80.0, 51.0, 32.0, [0.23921569, 0.14509805, 0.06666667]); // 406 (Grey)
dot(98.0, 60.0, 43.0, [0.23921569, 0.14509805, 0.06666667]); // 407 (Grey)
dot(49.0, 19.0, 10.0, [0.23921569, 0.14509805, 0.06666667]); // 408 (Grey)
dot(58.0, 29.0, 19.0, [0.23921569, 0.14509805, 0.06666667]); // 409 (Grey)
dot(153.0, 99.0, 78.0, [0.7372549, 0.6862745, 0.0627451]); // 410 (Yellow)
dot(81.0, 48.0, 33.0, [0.23921569, 0.14509805, 0.06666667]); // 411 (Grey)
dot(66.0, 34.0, 22.0, [0.23921569, 0.14509805, 0.06666667]); // 412 (Grey)
dot(65.0, 35.0, 21.0, [0.23921569, 0.14509805, 0.06666667]); // 413 (Grey)
dot(99.0, 54.0, 41.0, [0.23921569, 0.14509805, 0.06666667]); // 414 (Grey)
dot(109.0, 61.0, 47.0, [0.23921569, 0.14509805, 0.06666667]); // 415 (Grey)
dot(58.0, 26.0, 16.0, [0.23921569, 0.14509805, 0.06666667]); // 416 (Grey)
dot(70.0, 40.0, 24.0, [0.23921569, 0.14509805, 0.06666667]); // 417 (Grey)
dot(119.0, 90.0, 60.0, [0.23921569, 0.14509805, 0.06666667]); // 418 (Grey)
dot(68.0, 36.0, 22.0, [0.23921569, 0.14509805, 0.06666667]); // 419 (Grey)
dot(118.0, 78.0, 57.0, [0.23921569, 0.14509805, 0.06666667]); // 420 (Grey)
dot(58.0, 32.0, 20.0, [0.23921569, 0.14509805, 0.06666667]); // 421 (Grey)
dot(47.0, 17.0, 11.0, [0.23921569, 0.14509805, 0.06666667]); // 422 (Grey)
dot(90.0, 67.0, 42.0, [0.23921569, 0.14509805, 0.06666667]); // 423 (Grey)
dot(63.0, 35.0, 21.0, [0.23921569, 0.14509805, 0.06666667]); // 424 (Grey)
dot(74.0, 41.0, 27.0, [0.23921569, 0.14509805, 0.06666667]); // 425 (Grey)
dot(52.0, 20.0, 14.0, [0.23921569, 0.14509805, 0.06666667]); // 426 (Grey)
dot(106.0, 72.0, 49.0, [0.23921569, 0.14509805, 0.06666667]); // 427 (Grey)
dot(71.0, 31.0, 24.0, [0.23921569, 0.14509805, 0.06666667]); // 428 (Grey)
dot(81.0, 50.0, 34.0, [0.23921569, 0.14509805, 0.06666667]); // 429 (Grey)
dot(97.0, 56.0, 40.0, [0.23921569, 0.14509805, 0.06666667]); // 430 (Grey)
dot(63.0, 28.0, 19.0, [0.23921569, 0.14509805, 0.06666667]); // 431 (Grey)
dot(53.0, 23.0, 14.0, [0.23921569, 0.14509805, 0.06666667]); // 432 (Grey)
dot(58.0, 28.0, 17.0, [0.23921569, 0.14509805, 0.06666667]); // 433 (Grey)
dot(80.0, 36.0, 30.0, [0.23921569, 0.14509805, 0.06666667]); // 434 (Grey)
dot(87.0, 57.0, 36.0, [0.23921569, 0.14509805, 0.06666667]); // 435 (Grey)
dot(62.0, 36.0, 21.0, [0.23921569, 0.14509805, 0.06666667]); // 436 (Grey)
dot(92.0, 60.0, 40.0, [0.23921569, 0.14509805, 0.06666667]); // 437 (Grey)
dot(57.0, 29.0, 16.0, [0.23921569, 0.14509805, 0.06666667]); // 438 (Grey)
dot(71.0, 34.0, 24.0, [0.23921569, 0.14509805, 0.06666667]); // 439 (Grey)
dot(103.0, 68.0, 48.0, [0.23921569, 0.14509805, 0.06666667]); // 440 (Grey)
dot(116.0, 67.0, 53.0, [0.23921569, 0.14509805, 0.06666667]); // 441 (Grey)
dot(86.0, 51.0, 34.0, [0.23921569, 0.14509805, 0.06666667]); // 442 (Grey)
dot(116.0, 81.0, 55.0, [0.23921569, 0.14509805, 0.06666667]); // 443 (Grey)
dot(61.0, 35.0, 20.0, [0.23921569, 0.14509805, 0.06666667]); // 444 (Grey)
dot(75.0, 36.0, 26.0, [0.23921569, 0.14509805, 0.06666667]); // 445 (Grey)
dot(59.0, 26.0, 16.0, [0.23921569, 0.14509805, 0.06666667]); // 446 (Grey)
dot(86.0, 51.0, 34.0, [0.23921569, 0.14509805, 0.06666667]); // 447 (Grey)
dot(68.0, 32.0, 24.0, [0.23921569, 0.14509805, 0.06666667]); // 448 (Grey)
dot(119.0, 81.0, 61.0, [0.23921569, 0.14509805, 0.06666667]); // 449 (Grey)
dot(86.0, 63.0, 37.0, [0.23921569, 0.14509805, 0.06666667]); // 450 (Grey)
dot(100.0, 60.0, 44.0, [0.23921569, 0.14509805, 0.06666667]); // 451 (Grey)
dot(89.0, 59.0, 40.0, [0.23921569, 0.14509805, 0.06666667]); // 452 (Grey)
dot(69.0, 46.0, 26.0, [0.23921569, 0.14509805, 0.06666667]); // 453 (Grey)
dot(67.0, 31.0, 22.0, [0.23921569, 0.14509805, 0.06666667]); // 454 (Grey)
dot(52.0, 22.0, 14.0, [0.23921569, 0.14509805, 0.06666667]); // 455 (Grey)
dot(88.0, 49.0, 33.0, [0.23921569, 0.14509805, 0.06666667]); // 456 (Grey)
dot(152.0, 123.0, 84.0, [0.7372549, 0.6862745, 0.0627451]); // 457 (Yellow)
dot(73.0, 33.0, 22.0, [0.23921569, 0.14509805, 0.06666667]); // 458 (Grey)
dot(74.0, 42.0, 26.0, [0.23921569, 0.14509805, 0.06666667]); // 459 (Grey)
dot(54.0, 23.0, 15.0, [0.23921569, 0.14509805, 0.06666667]); // 460 (Grey)
dot(54.0, 26.0, 16.0, [0.23921569, 0.14509805, 0.06666667]); // 461 (Grey)
dot(82.0, 49.0, 33.0, [0.23921569, 0.14509805, 0.06666667]); // 462 (Grey)
dot(100.0, 55.0, 43.0, [0.23921569, 0.14509805, 0.06666667]); // 463 (Grey)
dot(84.0, 51.0, 36.0, [0.23921569, 0.14509805, 0.06666667]); // 464 (Grey)
dot(80.0, 51.0, 32.0, [0.23921569, 0.14509805, 0.06666667]); // 465 (Grey)
dot(67.0, 36.0, 23.0, [0.23921569, 0.14509805, 0.06666667]); // 466 (Grey)
dot(104.0, 68.0, 48.0, [0.23921569, 0.14509805, 0.06666667]); // 467 (Grey)
dot(91.0, 65.0, 42.0, [0.23921569, 0.14509805, 0.06666667]); // 468 (Grey)
// # File: RGB_read_2014-04-12_17-51-02.csv
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 470 (Black)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 471 (Black)
dot(245.0, 213.0, 0.0, [0.7372549, 0.6862745, 0.0627451]); // 472 (Yellow)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 473 (Black)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 474 (Black)
dot(246.0, 210.0, 0.0, [0.7372549, 0.6862745, 0.0627451]); // 475 (Yellow)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 476 (Black)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 477 (Black)
dot(246.0, 226.0, 0.0, [0.7372549, 0.6862745, 0.0627451]); // 478 (Yellow)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 479 (Black)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 480 (Black)
dot(245.0, 205.0, 0.0, [0.7372549, 0.6862745, 0.0627451]); // 481 (Yellow)
dot(246.0, 217.0, 0.0, [0.7372549, 0.6862745, 0.0627451]); // 482 (Yellow)
dot(246.0, 229.0, 0.0, [0.7372549, 0.6862745, 0.0627451]); // 483 (Yellow)
dot(0.0, 0.0, 0.0, [0.0, 0.0, 0.0]); // 484 (Black)
marker(0, 0, 0); // Black
marker(11, 22, 72); // Blue
marker(4, 108, 2); // Green
marker(243, 3, 1); // Red
marker(239, 228, 12); // Yellow
marker(244, 245, 216); // White
marker(73, 42, 26); // Grey
